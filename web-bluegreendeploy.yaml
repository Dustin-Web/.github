name: bluegreen-deploy
on: 
  workflow_call:
        inputs:
          service_name:
            type: string
            description: 'Name of the service to deploy'
            required: true
            default: ''
          owner:
            required: true
            type: string
            description: "Caller github.repo.owner"
          repo:
            required: true
            type: string
            description: "Caller github.repo "
          sha:
            required: true
            type: string
            description: "Caller github.sha "
          branch: 
             required: true
             type: string
             description: "branch is github.ref from caller"
          run_number: 
              required: true  
              type: string
              description: "github.run_number from caller"
          acr_registry:
              required: false
              type: string
              description: "Acr registry url"
              default: "acrweb.azurecr.io"

        secrets:
          acr_username:
            required: true
          acr_password:
            required: true  
          web_app_infra_repo_token:
            required: true
          CALLER_GITHUB_TOKEN:
            required: true

permissions:
      id-token: write
      contents: read

jobs:
  build:
    runs-on: ubuntu-latest
    outputs:
        releasetag: ${{steps.vars.outputs.releasetag}}

    steps:
      - name: Checkout repository
        uses: actions/checkout@v2
        with:
          repository: ${{ inputs.repo }}
          token: ${{ secrets.CALLER_GITHUB_TOKEN }} # `GH_PAT` is a secret that contains your PAT
        # Setup som github variables 
      - name: Declare github repository variables
        id: vars
        shell: bash
        env:
          RELEASE_DATE: $(git show -s --format=%cd --date=format:%Y-%m-%d)
        run: |
          echo "##[set-output name=branch;]$(echo ${{ inputs.branch }}#refs/heads/)"
          echo "::set-output name=commit_date::$(git show -s --format=%cd --date=format:%Y-%m-%d)"
          echo "::set-output name=releasetag::$(echo release_${{ env.RELEASE_DATE }}_${{ inputs.run_number }})"

      # Login against a Docker registry except on PR
      # https://github.com/docker/login-action
      - name: Log into registry ${{ inputs.acr_registry  }}
        if: github.event_name != 'pull_request'
        uses: docker/login-action@28218f9b04b4f3f62068d7b6ce6ca5b26e35336c
        with:
          registry: ${{ inputs.acr_registry }}
          username: ${{ secrets.acr_username }}
          password: ${{ secrets.acr_password }}

      - name: Check current path
        id: currentpath
        shell: bash
        run: |
          echo "Current dir ${PWD}"
          ls -la 
          echo "Workspaece ${{env.GITHUB_WORKSPACE}}"

      # Build and push Docker image with Buildx (don't push on PR)
      # https://github.com/docker/build-push-action
      - name: Build and push Docker image
        uses: docker/build-push-action@ad44023a93711e3deb337508980b4b5e9bcdc5dc
        with:
          context: .
          push: ${{ github.event_name != 'pull_request' }}
          tags: ${{ inputs.acr_registry }}/${{ inputs.service_name }}:${{ steps.vars.outputs.releasetag }}
          build_args: CI_COMMIT_SHA=${{ steps.vars.outputs.sha_short }},RELEASE_TAG=${{ steps.vars.outputs.releasetag }},CI_COMMIT_MESSAGE=${{ github.event.head_commit.message }},CI_COMMIT_DATE=${{ steps.vars.outputs.commit_date }} 


  deploy-test:
    runs-on: ubuntu-latest
    if: contains(github.ref, 'heads')
    needs:
    - build
    steps:
      - name: Setup Kustomize 
        uses: imranismail/setup-kustomize@v1
        with:
          kustomize-version: 3.8.6

      - name: Clone stuff
        env:
          REPO_TOKEN: ${{secrets.web_app_infra_repo_token}}
        run: | 
          git clone https://${REPO_TOKEN}@github.com/Dustin-AB/web-app-infra.git .

      - name: Update Image
        working-directory: ./apps/${{ inputs.service_name }}/overlays/test
        run: | 
          echo "RELEASE_TAG ${{needs.build.outputs.releasetag}}"
          deploy_slot="$(grep -w ./patch-service-pre-label.yaml -e 'value' | awk '{print $2}')"
          kustomize edit set image ${{ inputs.acr_registry }}/${{ inputs.service_name }}:"${deploy_slot}"=:${{needs.build.outputs.releasetag}}
          git add .
          git config user.email "$EMAIL"
          git config user.name "$GITHUB_ACTOR"
          git commit -m ":package: Update test image with new deploy ${{ inputs.service_name }} sha: ${{ inputs.sha }}"
          git push

  release-test:
    runs-on: ubuntu-latest
    needs: 
      - build
      - deploy-test
    steps:
      - name: Setup Kustomize 
        uses: imranismail/setup-kustomize@v1
        with:
          kustomize-version: 3.8.6

      - name: Clone stuff
        env:
          REPO_TOKEN: ${{secrets.web_app_infra_repo_token}}
        run: | 
          git clone https://${REPO_TOKEN}@github.com/Dustin-AB/web-app-infra.git .

      - name:  Swap image
        working-directory: ./apps/${{ inputs.service_name }}/overlays/test
        run: | 
          #Swap the files
          mv patch-service-label.yaml patch-service-label.yaml._tmp \
          && mv patch-service-pre-label.yaml patch-service-label.yaml \
          && mv patch-service-label.yaml._tmp patch-service-pre-label.yaml
          git add .
          git config user.email "$EMAIL"
          git config user.name "$GITHUB_ACTOR"
          git commit -m ":rocket: Swap deployments for test ${{ inputs.service_name }} sha: ${{ inputs.sha }}"
          git push